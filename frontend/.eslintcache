[{"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/index.tsx":"1","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/reportWebVitals.ts":"2","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/App.tsx":"3","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/routers/Logged-in-router.tsx":"4","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/pages/Home/index.tsx":"5","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/store/index.ts":"6","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/sagas/index.ts":"7","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/reducers/index.ts":"8","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/sagas/user.ts":"9","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/reducers/user.ts":"10","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/actions/types.ts":"11","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/actions/index.ts":"12","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/utils/constants.ts":"13","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/routers/Logged-out-router.tsx":"14","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/pages/Login/index.tsx":"15","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/pages/Signup/index.tsx":"16","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/utils/fetcher.ts":"17","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/TodoList/index.tsx":"18","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/Todo/index.tsx":"19","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/TodoForm/index.tsx":"20"},{"size":605,"mtime":1610587890368,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1610421142656,"results":"23","hashOfConfig":"22"},{"size":574,"mtime":1610871472924,"results":"24","hashOfConfig":"22"},{"size":510,"mtime":1610587048385,"results":"25","hashOfConfig":"22"},{"size":753,"mtime":1610867961532,"results":"26","hashOfConfig":"22"},{"size":594,"mtime":1610587647486,"results":"27","hashOfConfig":"22"},{"size":401,"mtime":1610871587964,"results":"28","hashOfConfig":"22"},{"size":202,"mtime":1610599737763,"results":"29","hashOfConfig":"22"},{"size":2359,"mtime":1610861716624,"results":"30","hashOfConfig":"22"},{"size":3046,"mtime":1610855913226,"results":"31","hashOfConfig":"22"},{"size":626,"mtime":1610855433920,"results":"32","hashOfConfig":"22"},{"size":2385,"mtime":1610871524347,"results":"33","hashOfConfig":"22"},{"size":47,"mtime":1610599308627,"results":"34","hashOfConfig":"22"},{"size":612,"mtime":1610609487087,"results":"35","hashOfConfig":"22"},{"size":1924,"mtime":1610609532707,"results":"36","hashOfConfig":"22"},{"size":2243,"mtime":1610610452429,"results":"37","hashOfConfig":"22"},{"size":220,"mtime":1610864637791,"results":"38","hashOfConfig":"22"},{"size":642,"mtime":1610869588878,"results":"39","hashOfConfig":"22"},{"size":213,"mtime":1610865067631,"results":"40","hashOfConfig":"22"},{"size":1362,"mtime":1610869650190,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"xmh4gx",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/index.tsx",[],["86","87"],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/reportWebVitals.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/App.tsx",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/routers/Logged-in-router.tsx",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/pages/Home/index.tsx",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/store/index.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/sagas/index.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/reducers/index.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/sagas/user.ts",["88"],"import { all, fork, call, takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  LOAD_MY_INFO_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n} from '../actions/types';\nimport { IAuthForm, LoginRequestAction, LogoutRequestAction, SignUpRequestAction } from '../actions';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction loginAPI(data: IAuthForm) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action: LoginRequestAction) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    localStorage.setItem('jwtToken', result.data.token);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data.user,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* logout() {\n  try {\n    localStorage.removeItem('jwtToken');\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: '로그아웃 실패'\n    });\n  }\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction signUpAPI(data: IAuthForm) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action: SignUpRequestAction) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadMyInfo), fork(watchLogin), fork(watchSignUp), fork(watchLogout)]);\n}\n","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/reducers/user.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/actions/types.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/actions/index.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/utils/constants.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/routers/Logged-out-router.tsx",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/pages/Login/index.tsx",["89","90","91"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { loginRequestAction } from '../../actions';\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n}\n\nconst Login: React.FC = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    getValues,\n    errors,\n    handleSubmit,\n    formState,\n  } = useForm<ILoginForm>({ mode: 'onChange' });\n\n  const onSubmit = () => {\n    const { email, password } = getValues();\n    dispatch(loginRequestAction(email, password));\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <input\n          ref={register({\n            required: '이메일을 입력 해주세요',\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          })}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          required\n        />\n        {errors.email?.message && <span>{errors.email.message}</span>}\n        {errors.email?.type === 'pattern' && (\n          <span>유효한 이메일을 입력 해주세요</span>\n        )}\n        <input\n          ref={register({\n            required: '패스워드를 입력 해주세요',\n            minLength: 3,\n          })}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n        />\n        {errors.password?.message && <span>{errors.password.message}</span>}\n        {errors.password?.type === 'minLength' && (\n          <span>패스워드는 3자 이상 입력해주세요</span>\n        )}\n        <button type=\"submit\">로그인</button>\n      </form>\n      <span>계정이 없으신가요 ? <Link to=\"/signup\">회원가입</Link></span>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/pages/Signup/index.tsx",["92","93"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { signUpRequestAction } from '../../actions';\nimport { RootState } from '../../reducers';\n\ninterface ISignUpForm {\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const signUpDone = useSelector((state: RootState) => state.user.signUpDone);\n  const signUpError = useSelector((state: RootState) => state.user.signUpError);\n  const { register, getValues, errors, handleSubmit } = useForm<ISignUpForm>({\n    mode: 'onChange',\n  });\n\n  const onSubmit = () => {\n    const { email, password } = getValues();\n    dispatch(signUpRequestAction(email, password));\n  };\n\n  useEffect(() => {\n    if (signUpDone) {\n      history.push('/');\n    }\n  }, [history, signUpDone]);\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <input\n          ref={register({\n            required: '이메일을 입력 해주세요',\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          })}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          required\n        />\n        {errors.email?.message && <span>{errors.email.message}</span>}\n        {errors.email?.type === 'pattern' && (\n          <span>유효한 이메일을 입력 해주세요</span>\n        )}\n        <input\n          ref={register({\n            required: '패스워드를 입력 해주세요',\n            minLength: 3,\n          })}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n        />\n        {errors.password?.message && <span>{errors.password.message}</span>}\n        {errors.password?.type === 'minLength' && (\n          <span>패스워드는 3자 이상 입력해주세요</span>\n        )}\n        <button type=\"submit\">회원가입</button>\n      </form>\n      {signUpError && <span>{signUpError}</span>}\n    </div>\n  );\n};\n\nexport default SignUp;\n","/Users/PilyeongHeo/Documents/ts-todo/frontend/src/utils/fetcher.ts",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/TodoList/index.tsx",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/Todo/index.tsx",[],"/Users/PilyeongHeo/Documents/ts-todo/frontend/src/components/TodoForm/index.tsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":17,"column":41,"nodeType":"100","messageId":"101","endLine":17,"endColumn":60},{"ruleId":"98","severity":1,"message":"102","line":19,"column":5,"nodeType":"100","messageId":"101","endLine":19,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":33,"column":32,"nodeType":"105","messageId":"106","endLine":33,"endColumn":33,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"104","line":33,"column":57,"nodeType":"105","messageId":"106","endLine":33,"endColumn":58,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"104","line":39,"column":32,"nodeType":"105","messageId":"106","endLine":39,"endColumn":33,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"104","line":39,"column":57,"nodeType":"105","messageId":"106","endLine":39,"endColumn":58,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'LogoutRequestAction' is defined but never used.","Identifier","unusedVar","'formState' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["113","114"],["115","116"],["117","118"],["119","120"],"no-global-assign","no-unsafe-negation",{"messageId":"121","fix":"122","desc":"123"},{"messageId":"124","fix":"125","desc":"126"},{"messageId":"121","fix":"127","desc":"123"},{"messageId":"124","fix":"128","desc":"126"},{"messageId":"121","fix":"129","desc":"123"},{"messageId":"124","fix":"130","desc":"126"},{"messageId":"121","fix":"131","desc":"123"},{"messageId":"124","fix":"132","desc":"126"},"removeEscape",{"range":"133","text":"134"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"135","text":"136"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"137","text":"134"},{"range":"138","text":"136"},{"range":"139","text":"134"},{"range":"140","text":"136"},{"range":"141","text":"134"},{"range":"142","text":"136"},[787,788],"",[787,787],"\\",[812,813],[812,812],[1138,1139],[1138,1138],[1163,1164],[1163,1163]]